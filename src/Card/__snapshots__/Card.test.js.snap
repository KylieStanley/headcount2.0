// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card should match the snapshot with data passed in correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    district={
        Object {
            "location": "COLORADO",
            "stats": Object {
              "2004": 0.5,
              "2005": 0.4,
            },
          }
    }
    selectCard={[Function]}
    selectedCards={
        Array [
            Object {
              "location": "COLORADO",
              "stats": Object {
                "2004": 0.5,
                "2005": 0.4,
              },
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
          COLORADO
</h2>,
        <ul>
          <li
                    className="greater-than"
          >
                    2004
                    : 
                    0.5
          </li>
          <li
                    className="less-than"
          >
                    2005
                    : 
                    0.4
          </li>
</ul>,
      ],
      "className": "card selected",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "COLORADO",
        },
        "ref": null,
        "rendered": "COLORADO",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li
              className="greater-than"
>
              2004
              : 
              0.5
</li>,
            <li
              className="less-than"
>
              2005
              : 
              0.4
</li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "2004",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "2004",
                ": ",
                0.5,
              ],
              "className": "greater-than",
            },
            "ref": null,
            "rendered": Array [
              "2004",
              ": ",
              0.5,
            ],
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "2005",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "2005",
                ": ",
                0.4,
              ],
              "className": "less-than",
            },
            "ref": null,
            "rendered": Array [
              "2005",
              ": ",
              0.4,
            ],
            "type": "li",
          },
        ],
        "type": "ul",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            COLORADO
</h2>,
          <ul>
            <li
                        className="greater-than"
            >
                        2004
                        : 
                        0.5
            </li>
            <li
                        className="less-than"
            >
                        2005
                        : 
                        0.4
            </li>
</ul>,
        ],
        "className": "card selected",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "COLORADO",
          },
          "ref": null,
          "rendered": "COLORADO",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li
                className="greater-than"
>
                2004
                : 
                0.5
</li>,
              <li
                className="less-than"
>
                2005
                : 
                0.4
</li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "2004",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "2004",
                  ": ",
                  0.5,
                ],
                "className": "greater-than",
              },
              "ref": null,
              "rendered": Array [
                "2004",
                ": ",
                0.5,
              ],
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "2005",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "2005",
                  ": ",
                  0.4,
                ],
                "className": "less-than",
              },
              "ref": null,
              "rendered": Array [
                "2005",
                ": ",
                0.4,
              ],
              "type": "li",
            },
          ],
          "type": "ul",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
